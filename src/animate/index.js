import { 
  fadeIn, 
  translateXYIn, 
  scaleIn,
  scaleInX,
  scaleInY,
  rotateIn,
  skewInX,
  BlockFromIn,
  customEffectIn,
  splitText,
} from './animationIn';

export const getAnimationProps = (props) => {
    const {
      duration = 800,
      delay = 0,
      endDelay = 0,
      easing = 'linear',
      loop = '1',
      direction = 'normal',
      startXFrom: startXFrom, 
      startXTo: startXTo, 
      startYFrom: startYFrom, 
      startYTo: startYTo, 
      startYBottom: startYBottom,
      scaleFrom: scaleFrom,
      scaleTo: scaleTo,
      stagger,
      textSplitEffect,
      opacityFrom : opacityFrom,
      opacityTo : opacityTo,
      rotateFrom: rotateFrom,
      rotateTo: rotateTo,
      rotateXFrom: rotateXFrom,
      rotateXTo: rotateXTo,
      rotateYFrom: rotateYFrom,
      rotateYTo: rotateYTo,
      skewXFrom: skewXFrom,
      skewXTo: skewXTo,
      skewYFrom: skewYFrom,
      skewYTo: skewYTo,
      directionBlock: directionBlock,
      colorBlockEffect: colorBlockEffect,
      filterFrom: filterFrom,
      filterTo: filterTo,
      scaleType: scaleType,
      
    } = props;

    const loopCount = (typeof loop === 'string' && loop.toLowerCase() === 'true') ? Infinity : Number(loop);
  
    return {
      duration,
      delay: delay,
      endDelay,
      easing,
      loop:loopCount,
      direction,
      startXFrom,
      startXTo,
      startYFrom,
      startYTo,
      startYBottom,
      stagger,
      textSplitEffect,
      opacityFrom,
      opacityTo,
      scaleFrom,
      scaleTo,
      rotateFrom,
      rotateTo,
      rotateXFrom,
      rotateXTo,
      rotateYFrom,
      rotateYTo,
      skewXFrom,
      skewXTo,
      skewYFrom,
      skewYTo,
      directionBlock,
      colorBlockEffect,
      filterFrom,
      filterTo,
      scaleType,
    };
  };

const animationsIn = {
  fadeIn,
  translateXYIn,
  scaleIn,
  scaleInX,
  scaleInY,
  rotateIn,
  skewInX,
  BlockFromIn,
  customEffectIn,
  splitText,
};

export { animationsIn };
