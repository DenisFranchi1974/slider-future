{"version":3,"file":"slider/view.js","mappings":";;;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAMC,aAAa,GAAGF,QAAQ,CAACG,aAAa,CAAC,SAAS,CAAC;EAEvD,IAAID,aAAa,EAAE;IACf,MAAME,UAAU,GAAGF,aAAa,CAACG,YAAY,CAAC,aAAa,CAAC;IAE5D,IAAID,UAAU,EAAE;MAAA,IAAAE,qBAAA,EAAAC,qBAAA;MACZ,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;;MAE1C;MACA,MAAMO,QAAQ,IAAAL,qBAAA,GAAGE,YAAY,CAACG,QAAQ,cAAAL,qBAAA,cAAAA,qBAAA,GAAI,SAAS;MACnD,MAAMM,YAAY,IAAAL,qBAAA,GAAGC,YAAY,CAACI,YAAY,cAAAL,qBAAA,cAAAA,qBAAA,GAAI,CAAC;MACnD,MAAMM,WAAW,GAAGD,YAAY,GAAG,CAAC;MAEpC,IAAID,QAAQ,KAAK,QAAQ,IAAIE,WAAW,EAAE;QACtCC,OAAO,CAACC,IAAI,CAAC,0EAA0E,CAAC;MAC5F;MAED,IAAIC,MAAM,CAAC,SAAS,EAAE;QAClBC,SAAS,EAAET,YAAY,CAACU,eAAe;QACvCC,MAAM,EAAEX,YAAY,CAACW,MAAM;QAAE;QAC7BC,UAAU,EAAE;UACRC,EAAE,EAAE;QACR,CAAC;QACDC,UAAU,EAAE;UACRC,MAAM,EAAE,qBAAqB;UAC7BC,MAAM,EAAE;QACZ,CAAC;QACDC,SAAS,EAAE;UACPJ,EAAE,EAAE;QACR,CAAC;QACDK,IAAI,EAAE;UACFC,IAAI,EAAEnB,YAAY,CAACI,YAAY;UAC/BgB,IAAI,EAAE;QACV,CAAC;QACDC,cAAc,EAAErB,YAAY,CAACqB,cAAc;QAC3CC,YAAY,EAAEtB,YAAY,CAACsB,YAAY;QACvCC,UAAU,EAAEvB,YAAY,CAACuB,UAAU;QACnCC,UAAU,EAAExB,YAAY,CAACwB,UAAU;QACnCC,IAAI,EAAEzB,YAAY,CAACG,QAAQ,KAAK,QAAQ;QACxCuB,MAAM,EAAE1B,YAAY,CAACG,QAAQ,KAAK,QAAQ;QAE1CwB,WAAW,EAAC;UACR,GAAG,EAAE;YACDC,aAAa,EAAE5B,YAAY,CAAC6B,mBAAmB;YAC/CC,YAAY,EAAE9B,YAAY,CAAC+B,kBAAkB;YAC7CC,cAAc,EAAEhC,YAAY,CAACiC;UACjC,CAAC;UACD,GAAG,EAAE;YACDL,aAAa,EAAE5B,YAAY,CAACkC,mBAAmB;YAC/CJ,YAAY,EAAE9B,YAAY,CAACmC,kBAAkB;YAC7CH,cAAc,EAAEhC,YAAY,CAACoC;UACjC,CAAC;UACD,IAAI,EAAE;YACFR,aAAa,EAAE5B,YAAY,CAACqC,aAAa;YACzCP,YAAY,EAAE9B,YAAY,CAAC8B,YAAY;YACvCE,cAAc,EAAEhC,YAAY,CAACsC;UACjC;QACJ;MACJ,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC,C","sources":["webpack://slider-fse/./src/slider/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const swiperElement = document.querySelector('.swiper');\n\n    if (swiperElement) {\n        const swiperData = swiperElement.getAttribute('data-swiper');\n\n        if (swiperData) {\n            const swiperConfig = JSON.parse(swiperData);\n\n             // Aggiungi il controllo per la compatibilitÃ \n             const loopMode = swiperConfig.loopMode ?? 'disable';\n             const slidesPerRow = swiperConfig.slidesPerRow ?? 1;\n             const gridEnabled = slidesPerRow > 1;\n \n             if (loopMode === 'enable' && gridEnabled) {\n                 console.warn(\"Swiper Loop Warning: Loop mode is not compatible with grid.fill = 'row'.\");\n             }\n\n            new Swiper('.swiper', {\n                direction: swiperConfig.directionSlider,\n                effect: swiperConfig.effect, // Aggiungi l'effetto qui\n                pagination: {\n                    el: '.swiper-pagination',\n                },\n                navigation: {\n                    nextEl: '.swiper-button-next',\n                    prevEl: '.swiper-button-prev',\n                },\n                scrollbar: {\n                    el: '.swiper-scrollbar',\n                },\n                grid: {\n                    rows: swiperConfig.slidesPerRow,\n                    fill: 'row',\n                },\n                centeredSlides: swiperConfig.centeredSlides,\n                initialSlide: swiperConfig.initialSlide,\n                autoHeight: swiperConfig.autoHeight,\n                grabCursor: swiperConfig.grabCursor,\n                loop: swiperConfig.loopMode === 'enable',\n                rewind: swiperConfig.loopMode === 'rewind',\n               \n                breakpoints:{\n                    640: {\n                        slidesPerView: swiperConfig.perViewSliderMobile,\n                        spaceBetween: swiperConfig.spaceBetweenMobile,\n                        slidesPerGroup: swiperConfig.slidesPerGroupMobile,\n                    },\n                    768: {\n                        slidesPerView: swiperConfig.perViewSliderTablet,\n                        spaceBetween: swiperConfig.spaceBetweenTablet,\n                        slidesPerGroup: swiperConfig.slidesPerGroupTablet,\n                    },\n                    1024: {\n                        slidesPerView: swiperConfig.perViewSlider,\n                        spaceBetween: swiperConfig.spaceBetween,\n                        slidesPerGroup: swiperConfig.slidesPerGroupDesktop,\n                    },\n                },\n            });\n        }\n    }\n});\n"],"names":["document","addEventListener","swiperElement","querySelector","swiperData","getAttribute","_swiperConfig$loopMod","_swiperConfig$slidesP","swiperConfig","JSON","parse","loopMode","slidesPerRow","gridEnabled","console","warn","Swiper","direction","directionSlider","effect","pagination","el","navigation","nextEl","prevEl","scrollbar","grid","rows","fill","centeredSlides","initialSlide","autoHeight","grabCursor","loop","rewind","breakpoints","slidesPerView","perViewSliderMobile","spaceBetween","spaceBetweenMobile","slidesPerGroup","slidesPerGroupMobile","perViewSliderTablet","spaceBetweenTablet","slidesPerGroupTablet","perViewSlider","slidesPerGroupDesktop"],"sourceRoot":""}